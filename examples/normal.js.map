{"version":3,"sources":["webpack:///./examples/normal.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;kCAAkB,CAAO;;;;qCACJ,GAAW;;;;uCACE,GAAa;;kCACe,GAAO;;qCACrB,GAAc;;AAE9D,KAAM,GAAG,GAAG,mBAAM,WAAW,CAAC;;;AAC5B,SAAM,oBAAG;SACC,WAAW,GAAK,IAAI,CAAC,KAAK,CAA1B,WAAW;;AACnB,YAAO;;SAAK,KAAK,EAAE;AACf,iBAAM,kBAAc,WAAW,IAAI,MAAM,CAAE;AAC3C,uBAAY,EAAC,CAAC;UACd;;MAAU,CAAC;IAChB;EACF,CAAC,CAAC;;AAEH,KAAM,QAAQ,GAAG,0BAAW;AAC1B,KAAE,EAAE,WAAW;AACf,SAAM,EAAE,CAAC,aAAa,CAAC;EACxB,CAAC,CAAC,GAAG,CAAC,CAAC;;AAER,KAAM,MAAM,GAAG,0BAAW;AACxB,KAAE,EAAE,SAAS;AACb,SAAM,EAAE,CAAC,aAAa,CAAC;EACxB,CAAC,CAAC,GAAG,CAAC,CAAC;;AAER,KAAM,GAAG,GAAG,0BAAS,CAAC,mBAAM,WAAW,CAAC;AACtC,WAAQ,oBAAC,EAAE,EAAE,WAAW,EAAE;AACxB,SAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AAClB,WAAI,EAAE,YAAY;AAClB,SAAE,EAAF,EAAE;AACF,cAAO,EAAE,EAAE,WAAW,EAAX,WAAW,EAAE;MACzB,CAAC,CAAC;IACJ;AACD,SAAM,oBAAG;AACP,YAAQ;;SAAK,KAAK,EAAE,EAAC,OAAO,EAAC,EAAE,EAAE;OAC/B,iCAAC,QAAQ,OAAG;OACZ,iCAAC,MAAM,OAAG;;OACE;;WAAQ,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,OAAO,CAAE;;QAAmB;OAC/F,4CAAM;;OACI;;WAAQ,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAE;;QAAmB;OACzF;;WAAQ,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,eAAK;oBAAI,KAAK,KAAK,MAAM,GAAG,QAAQ,GAAG,MAAM;YAAA,CAAG;;QAA8C;MAC/I,CAAE;IACT;EACF,CAAC,CAAC,CAAC;;AAEJ,KAAM,KAAK,GAAG,iDAA2B,oBAAa,CAAC,4BAAgB;AACrE,eAAY,mBAAS;EACtB,CAAC,CAAC,CAAC;;AAEJ,uBAAS,MAAM,CAAC;;KAAU,KAAK,EAAE,KAAM;GACrC,iCAAC,GAAG,OAAG;EACE,EAAE,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,C","file":"normal.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createBind, reducer, middleware } from '../src/index';\n\nconst Box = React.createClass({\n  render() {\n    const { borderColor } = this.props;\n    return <div style={{\n        border:`3px solid ${borderColor || 'gray'}`,\n        marginBottom:6,\n      }}>box</div>;\n  },\n});\n\nconst GreenBox = createBind({\n  id: 'box.green',\n  fields: ['borderColor'],\n})(Box);\n\nconst RedBox = createBind({\n  id: 'box.red',\n  fields: ['borderColor'],\n})(Box);\n\nconst App = connect()(React.createClass({\n  addColor(id, borderColor) {\n    this.props.dispatch({\n      type: 'redux-bind',\n      id,\n      payload: { borderColor },\n    });\n  },\n  render() {\n    return (<div style={{padding:20}}>\n      <GreenBox />\n      <RedBox />\n      green box : <button onClick={this.addColor.bind(this, 'box.green', 'green')}>add color</button>\n      <br />\n      red box : <button onClick={this.addColor.bind(this, 'box.red', 'red')}>add color</button>\n      <button onClick={this.addColor.bind(this, 'box.red', color => color === 'blue' ? 'yellow' : 'blue' )}>toggle color between yellow and blue</button>\n    </div>);\n  },\n}));\n\nconst store = applyMiddleware(middleware)(createStore)(combineReducers({\n  'redux-bind': reducer,\n}));\n\nReactDOM.render(<Provider store={store}>\n  <App />\n</Provider>, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/normal.js\n **/"],"sourceRoot":""}